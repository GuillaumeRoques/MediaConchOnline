<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="mediaconch_user.registration.form.type" class="AppBundle\Form\Type\RegistrationFormType">
            <tag name="form.type" alias="mediaconch_user_registration" />
            <argument>%fos_user.model.user.class%</argument>
        </service>

        <service id="mediaconch_user.profile.form.type" class="AppBundle\Form\Type\ProfileFormType">
            <tag name="form.type" alias="mediaconch_user_profile" />
            <argument>%fos_user.model.user.class%</argument>
        </service>

        <service id="mediaconch_user.quotas" class="AppBundle\Lib\Quotas\Quotas">
            <argument type="service" id="security.token_storage" />
            <argument type="service" id="doctrine.orm.entity_manager" />
        </service>

        <service id="app.form.type.professional" class="AppBundle\Form\Type\ProfessionalType">
            <tag name="form.type" alias="professional" />
        </service>

        <service id="app.form.type.entity.disables" class="AppBundle\Form\Type\EntityDisabledType">
            <tag name="form.type" alias="entity_disabled" />
        </service>

        <service id="app.form.type.country.custom" class="AppBundle\Form\Type\CountryCustomType">
            <tag name="form.type" alias="country_custom" />
        </service>

        <service id="app.form.type.language.custom" class="AppBundle\Form\Type\LanguageCustomType">
            <tag name="form.type" alias="language_custom" />
        </service>

        <service id="app.form.type.checker.upload" class="AppBundle\Form\Type\CheckerUploadFormType">
            <tag name="form.type" alias="checkerUpload" />
            <argument type="service" id="security.token_storage" />
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="mco.settings" />
        </service>

        <service id="app.form.type.checker.online" class="AppBundle\Form\Type\CheckerOnlineFormType">
            <tag name="form.type" alias="checkerOnline" />
            <argument type="service" id="security.token_storage" />
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="mco.settings" />
        </service>

        <service id="app.form.type.checker.repository" class="AppBundle\Form\Type\CheckerRepositoryFormType">
            <tag name="form.type" alias="checkerRepository" />
            <argument type="service" id="security.token_storage" />
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="mco.settings" />
        </service>

        <service id="app.form.type.settings" class="AppBundle\Form\Type\SettingsFormType">
            <tag name="form.type" alias="settings" />
            <argument type="service" id="security.token_storage" />
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="mco.settings" />
        </service>

        <service id="app.form.type.policy.create" class="AppBundle\Form\Type\XslPolicyCreateFormType">
            <tag name="form.type" alias="xslPolicyCreate" />
        </service>

        <service id="app.form.type.policy.import" class="AppBundle\Form\Type\XslPolicyImportFormType">
            <tag name="form.type" alias="xslPolicyImport" />
        </service>

        <service id="app.form.type.policy.rule" class="AppBundle\Form\Type\XslPolicyRuleFormType">
            <tag name="form.type" alias="xslPolicyRule" />
        </service>

        <service id="app.form.type.display.import" class="AppBundle\Form\Type\DisplayImportFormType">
            <tag name="form.type" alias="displayImport" />
        </service>

        <service id="mco.directory_namer.policy" class="AppBundle\Lib\VichUploaderBundle\UserDirectoryNamer">
        </service>

        <service id="mco.xslpolicy.parser" class="AppBundle\Lib\XslPolicy\XslPolicyParser">
        </service>

        <service id="mco.xslpolicy.writer" class="AppBundle\Lib\XslPolicy\XslPolicyWriter">
        </service>

        <service id="mco.mediaconch.server" class="AppBundle\Lib\MediaConch\MediaConchServer" public="false">
            <argument>%app.mediaconch.address%</argument>
            <argument>%app.mediaconch.port%</argument>
            <argument>%app.mediaconch.api.version%</argument>
        </service>

        <service id="mco.checker.analyze" class="AppBundle\Lib\Checker\CheckerAnalyze">
            <argument type="service" id="mco.mediaconch.server"/>
        </service>

        <service id="mco.checker.status" class="AppBundle\Lib\Checker\CheckerStatus">
            <argument type="service" id="mco.mediaconch.server"/>
        </service>

        <service id="mco.checker.validate" class="AppBundle\Lib\Checker\CheckerValidate">
            <argument type="service" id="mco.mediaconch.server"/>
        </service>

        <service id="mco.checker.report" class="AppBundle\Lib\Checker\CheckerReport">
            <argument type="service" id="mco.mediaconch.server"/>
        </service>

        <service id="mco.checker.filename" class="AppBundle\Lib\Checker\CheckerFilename">
            <argument type="service" id="mco.mediaconch.server"/>
        </service>

        <service id="mco.policy.fromFile" class="AppBundle\Lib\XslPolicy\XslPolicyFromFile">
            <argument type="service" id="mco.mediaconch.server"/>
        </service>

        <service id="mco.policy.form.values" class="AppBundle\Lib\XslPolicy\XslPolicyFormValues">
            <argument type="service" id="mco.mediaconch.server"/>
        </service>

        <service id="mco.settings" class="AppBundle\Lib\Settings\SettingsManager">
            <argument type="service" id="security.token_storage" />
            <argument type="service" id="doctrine.orm.entity_manager" />
        </service>
    </services>
</container>
